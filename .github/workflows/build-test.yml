name: "CI: Build Test"

on: [push, pull_request]

env:
    CACHE_NAME: SWIFT5_1
    PROJECT: jmbde.xcworkspace
    FRAMEWORK_NAME: jmbde
    SCHEME: jmbde
    SDK: macosx10.15
    DESTINATION: "arch=x86_64"
    SWIFT_VERSION: 5.1
    LC_CTYPE: en_US.UTF-8
    LANG: en_US.UTF-8
    UPDATE_DOCS: true
    EXPANDED_CODE_SIGN_IDENTITY: "-"
    EXPANDED_CODE_SIGN_IDENTITY_NAME: "-"
    XCODEGEN_VERSION: 2.5.0

jobs:
    macOS_5_1:
        name: "Build macOS (5.1)"
        runs-on: macos-latest
        env:
            DEVELOPER_DIR: /Applications/Xcode_11.3.1.app/Contents/Developer
        steps:
            - uses: actions/checkout@v2.3.4
              with:
                  submodules: recursive
                  fetch-depth: 0
            - uses: actions/cache@v2.1.5
              id: bundler-cache
              with:
                  path: vendor/bundle
                  key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-gems-
            - name: Bundle setup
              run: bundle config path vendor/bundle
            - name: Bundle install
              if: steps.bundler-cache.outputs.cache-hit != 'true'
              run: bundle install --jobs 4 --retry 3
            - name: Brew Upgrade
              run: |
                  brew update-reset
                  brew bundle --no-upgrade

            - name: macOS (5.1)
              run: |
                  pod install || pod install --repo-update
                  set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde" -destination "platform=macOS" clean build | xcpretty

    macOS_5_2:
        name: "Build macOS (5.2)"
        runs-on: macos-latest
        env:
            DEVELOPER_DIR: /Applications/Xcode_11.7.app/Contents/Developer
        steps:
            - uses: actions/checkout@v2.3.4
              with:
                  submodules: recursive
                  fetch-depth: 0
            - uses: actions/cache@v2.1.5
              id: bundler-cache
              with:
                  path: vendor/bundle
                  key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-gems-
            - name: Bundle setup
              run: bundle config path vendor/bundle
            - name: Bundle install
              if: steps.bundler-cache.outputs.cache-hit != 'true'
              run: bundle install --jobs 4 --retry 3
            - name: Brew Upgrade
              run: |
                  brew update-reset
                  brew bundle --no-upgrade
            - name: macOS (5.2)
              run: |
                  pod install || pod install --repo-update
                  set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde" -destination "platform=macOS" clean build | xcpretty

    macOS_5_3:
        name: "Build macOS (5.3)"
        runs-on: macos-latest
        env:
            DEVELOPER_DIR: /Applications/Xcode_11.3.1.app/Contents/Developer
        steps:
            - uses: actions/checkout@v2.3.4
              with:
                  submodules: recursive
                  fetch-depth: 0
            - uses: actions/cache@v2.1.5
              id: bundler-cache
              with:
                  path: vendor/bundle
                  key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-gems-
            - name: Bundle setup
              run: bundle config path vendor/bundle
            - name: Bundle install
              if: steps.bundler-cache.outputs.cache-hit != 'true'
              run: bundle install --jobs 4 --retry 3
            - name: Brew Upgrade
              run: |
                  brew update-reset
                  brew bundle --no-upgrade

            - name: macOS (5.3)
              run: |
                  pod install || pod install --repo-update
                  set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde" -destination "platform=macOS" clean build | xcpretty

            - name: Upload Artifact
              uses: actions/upload-artifact@v2.2.3
              with:
                  name: "jmbde-macOS_swift_5_3_${{ matrix.config.os }}-${{ github.sha }}"
                  path: build/bin/${{ matrix.config.binary }}

    # iOS:
    #     name: "Test Build iOS"
    #     runs-on: macOS-latest
    #     env:
    #         DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    #     strategy:
    #         matrix:
    #             destination: ["OS=14.0,name=iPhone 11 Pro"] #, "OS=12.4,name=iPhone XS", "OS=11.4,name=iPhone X", "OS=10.3.1,name=iPhone SE"]
    #     steps:
    #         - uses: actions/checkout@v2.3.4
    #           with:
    #               submodules: recursive
    #               fetch-depth: 0
    #         - uses: actions/cache@v2.1.5
    #           id: bundler-cache
    #           with:
    #               path: vendor/bundle
    #               key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-gems-
    #         - name: Bundle setup
    #           run: bundle config path vendor/bundle
    #         - name: Bundle install
    #           if: steps.bundler-cache.outputs.cache-hit != 'true'
    #           run: bundle install --jobs 4 --retry 3
    #         - name: Brew Upgrade
    #           run: |
    #               brew update-reset
    #               brew bundle --no-upgrade

    #         - name: Build_iOS
    #           run: |
    #               pod install || pod install --repo-update
    #               set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde iOS" -destination "${{ matrix.destination }}" clean test | xcpretty

    # tvOS:
    #     name: "Test tvOS"
    #     runs-on: macOS-latest
    #     env:
    #         DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    #     strategy:
    #         matrix:
    #             destination: ["OS=14.0,name=Apple TV 4K"] #, "OS=11.4,name=Apple TV 4K", "OS=10.2,name=Apple TV 1080p"]
    #     steps:
    #         - uses: actions/checkout@v2.3.4
    #           with:
    #               submodules: recursive
    #               fetch-depth: 0
    #         - uses: actions/cache@v2.1.5
    #           id: bundler-cache
    #           with:
    #               path: vendor/bundle
    #               key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-gems-
    #         - name: Bundle setup
    #           run: bundle config path vendor/bundle
    #         - name: Bundle install
    #           if: steps.bundler-cache.outputs.cache-hit != 'true'
    #           run: bundle install --jobs 4 --retry 3
    #         - name: Brew Upgrade
    #           run: |
    #               brew update-reset
    #               brew bundle --no-upgrade

    #         - name: tvOS - ${{ matrix.destination }}
    #           run: |
    #               pod install || pod install --repo-update
    #               set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde tvOS" -destination "${{ matrix.destination }}" clean test | xcpretty

    # watchOS:
    #     name: "Test watchOS"
    #     runs-on: macOS-latest
    #     env:
    #         DEVELOPER_DIR: /Applications/Xcode_12.app/Contents/Developer
    #     strategy:
    #         matrix:
    #             destination: ["OS=7.0,name=Apple Watch Series 5 - 44mm"] #, "OS=4.2,name=Apple Watch Series 3 - 42mm", "OS=3.2,name=Apple Watch Series 2 - 42mm"]
    #     steps:
    #         - uses: actions/checkout@v2.3.4
    #           with:
    #               submodules: recursive
    #               fetch-depth: 0
    #         - uses: actions/cache@v2.1.5
    #           id: bundler-cache
    #           with:
    #               path: vendor/bundle
    #               key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-gems-
    #         - name: Bundle setup
    #           run: bundle config path vendor/bundle
    #         - name: Bundle install
    #           if: steps.bundler-cache.outputs.cache-hit != 'true'
    #           run: bundle install --jobs 4 --retry 3
    #         - name: Brew Upgrade
    #           run: |
    #               brew update-reset
    #               brew bundle --no-upgrade

    #         - name: tvOS - ${{ matrix.destination }}
    #           run: |
    #               pod install || pod install --repo-update
    #               set -o pipefail && xcodebuild -workspace "jmbde.xcworkspace" -scheme "jmbde watchOS" -destination "${{ matrix.destination }}" clean test | xcpretty
