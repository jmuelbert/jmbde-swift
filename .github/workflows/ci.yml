---
# SPDX-FileCopyrightText: ¬© 2016-2023 J√ºrgen M√ºlbert
#
# SPDX-License-Identifier: EUPL-1.2
#

name: CI

on: # yamllint disable-line rule:truthy
  push:
    paths:
      - jmbde/**
      - jmbdeTests/**
      - jmbdeUITests/**
      - jmbde.xcodeproj/**
      - Package.swift
      - .github/workflows/ci.yml

  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  TARGET_NAME: jmbde
  FRAMEWORK_NAME: jmbde
  SCHEME: jmbde
  PROJECT_NAME: jmbde.xcodeproj
  LC_CTYPE: en_US.UTF-8
  LANG: en_US.UTF-8
  UPDATE_DOCS: true
  EXPANDED_CODE_SIGN_IDENTITY: "-"
  EXPANDED_CODE_SIGN_IDENTITY_NAME: "-"

jobs:
  build:
    name: "Build macos for ${{ matrix.destination}}"
    runs-on: macos-latest
    needs: tests

    strategy:
      matrix:
        destination: ["'platform=macOS'"]
      fail-fast: false

    steps:
      - name: "üß∞ Checkout Source Code"
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: "‚öôÔ∏è Set XCode Version"
        run: sudo xcode-select -s /Applications/Xcode_13.4.1.app

      - name: "üöß Compile and build üì¶ application"
        run: |
          set -o pipefail && xcodebuild  \
            -project ${{ env.PROJECT_NAME }} \
            -scheme ${{ env.TARGET_NAME }} \
            -destination ${{ matrix.destination }} \
            -configuration "Release" \
            -derivedDataPath build/ \
            clean build | xcpretty
            ls -aL build/Build/Products/Release

      - name: "Upload artifact"
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: jmbde-macOS
          path: build/Build/Products/Release/jmbde*

  tests:
    name: "Tests on macos-latest"
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        xcode: ["13.2.1", "13.4.1", "14.2"]
        destination: ["'platform=macOS'"]

    steps:
      - name: "üß∞ Checkout Source Code"
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: "‚öôÔ∏è Select Xcode"
        run: |
          xcodebuild -version
          ls -nt /Applications/ | grep "Xcode*"
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app
          xcodebuild -version

      - name: "üöß build and test üì¶ application"
        run: |
          set -o pipefail && xcodebuild  \
            -project ${{ env.PROJECT_NAME }} \
            -destinationi ${ matrix.destination } \
            -configuration "Debug" \
            -enableCodeCoverage YES \
            -showBuildTimingSummary \
            -derivedDataPath Build/ \
            -enableThreadSanitizer YES \
            clean test | xcpretty

  deployPrereleases:
    name: Deploy Pre-Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: PreRelease
    needs:
      - build

    steps:
      - name: Pre-Release
        run: echo "here comes the pre release"

      - name: Download builded app (Artifact)
        uses: actions/download-artifact@v3
        with:
          name: jmbde-macOS
          path: build/

  deploy:
    name: deploy the Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: Release
    needs:
      - build

    steps:
      - name: Release
        run: |
          echo "here comes the release."

      - name: Download builded app (Artifact)
        uses: actions/download-artifact@v3
        with:
          name: jmbde-macOS
          path: build/
